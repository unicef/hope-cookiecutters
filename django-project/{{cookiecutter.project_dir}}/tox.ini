[tox]
requires =
    tox>=4.2
    tox-uv>=1.25
env_list =
    lint
    tests
    docs
    mypy
    pkg_meta

[testenv:lint]
description = run static analysis and style check using ruff
skip_install = true
deps =
    pre-commit-uv>=4.1.1
commands =
    pre-commit run --all-files --show-diff-on-failure
dependency_groups = dev

[testenv:tests]
runner = uv-venv-lock-runner
description = run tests
pass_env =
    BROKER_URL
    CI
    CONSTANCE_REDIS_URL
    DATABASE_URL
    REDIS_URL
set_env =
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONWARNINGS = ignore::DeprecationWarning
    SECRET_KEY = super_secret_but_really_insecure_key_just_for_testing
commands =
    {posargs:pytest tests -rw --headless --cov-report=xml  --junit-xml=junit.xml -o junit_family=legacy}
dependency_groups = dev

[testenv:docs]
description = build mkdocs documentation
skip_install = false
deps =
commands =
    mkdocs build {posargs:}
dependency_groups = docs

[testenv:mypy]
description = run type check on code base
deps =
    django==5.2.*
commands =
    mypy --config-file mypy.ini {posargs:}
dependency_groups =
    dev
    type-check

[testenv:pkg_meta]
runner = uv-venv-lock-runner
description = check that python package
skip_install = true
deps =
    check-wheel-contents>=0.6
    twine>=5.1.1
    uv>=0.5
commands =
    uv build --sdist -q --out-dir {env_tmp_dir} .
    uvx twine check {env_tmp_dir}{/}*
    uvx check-wheel-contents --ignore W002,W004,W009,W004 {env_tmp_dir}
    uv pip install --no-binary {{cookiecutter.package_name}} --find-links {env_tmp_dir} {{cookiecutter.package_name}}
